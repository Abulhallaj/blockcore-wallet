name: Build and Release

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:

jobs:
  build_blockcore:
    name: Build, Test and Release
    runs-on: ubuntu-latest

    env:
      BLOCKCORE: "blockcore"

    steps:
      - uses: actions/checkout@master
        name: Checkout

      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: "https://registry.npmjs.org"

      - name: Variables
        run: |
          echo VERSION=$(npm run version --silent) >> $GITHUB_ENV
        shell: bash

      - name: Package Name
        run: |
          echo RELEASE_NAME_BLOCKCORE=${{ env.BLOCKCORE }}-${{ env.VERSION }}.zip >> $GITHUB_ENV
        shell: bash

      - name: Install and Build
        run: |
          npm ci
          npm run all

      - name: Package Blockcore
        run: |
          cd dist/${{ env.BLOCKCORE }}
          zip -r ../../${{env.RELEASE_NAME_BLOCKCORE}} "./"
          cd ../../

      - name: Upload Blockcore
        uses: actions/upload-artifact@v1
        with:
          name: ${{env.BLOCKCORE}}-preview-${{env.VERSION}}
          path: "${{env.RELEASE_NAME_BLOCKCORE}}"

  build_coinvault:
    name: Build, Test and Release
    runs-on: ubuntu-latest

    env:
      COINVAULT: "coinvault"

    steps:
      - uses: actions/checkout@master
        name: Checkout

      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: "https://registry.npmjs.org"

      - name: Variables
        run: |
          echo VERSION=$(npm run version --silent) >> $GITHUB_ENV
        shell: bash

      - name: Package Name
        run: |
          echo RELEASE_NAME_COINVAULT=${{ env.COINVAULT }}-${{ env.VERSION }}.zip >> $GITHUB_ENV
        shell: bash

      - name: Install and Build
        run: |
          npm ci
          npm run all

      - name: Package CoinVault
        run: |
          cd dist/${{ env.COINVAULT }}
          zip -r ../../${{env.RELEASE_NAME_COINVAULT}} "./"
          cd ../../

      - name: Upload CoinVault
        uses: actions/upload-artifact@v1
        with:
          name: ${{env.COINVAULT}}-preview-${{env.VERSION}}
          path: "${{env.RELEASE_NAME_COINVAULT}}"

  build_smartcityplatform:
    name: Build, Test and Release
    runs-on: ubuntu-latest

    env:
      SMARTCITYPLATFORM: "smartcityplatform"

    steps:
      - uses: actions/checkout@master
        name: Checkout

      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: "https://registry.npmjs.org"

      - name: Variables
        run: |
          echo VERSION=$(npm run version --silent) >> $GITHUB_ENV
        shell: bash

      - name: Package Name
        run: |
          echo RELEASE_NAME_SMARTCITYPLATFORM=${{ env.SMARTCITYPLATFORM }}-${{ env.VERSION }}.zip >> $GITHUB_ENV
        shell: bash

      - name: Install and Build
        run: |
          npm ci
          npm run all

      - name: Package SmartCityPlatform
        run: |
          cd dist/${{ env.SMARTCITYPLATFORM }}
          zip -r ../../${{env.RELEASE_NAME_SMARTCITYPLATFORM}} "./"
          cd ../../

      - name: Upload SmartCityPlatform
        uses: actions/upload-artifact@v1
        with:
          name: ${{env.SMARTCITYPLATFORM}}-preview-${{env.VERSION}}
          path: "${{env.RELEASE_NAME_SMARTCITYPLATFORM}}"

  deploy:
    name: Create Draft Release
    runs-on: ubuntu-latest
    needs: [build_blockcore, build_coinvault, build_smartcityplatform]

    env:
      BLOCKCORE: "blockcore"
      COINVAULT: "coinvault"
      SMARTCITYPLATFORM: "smartcityplatform"

    steps:
      - uses: actions/checkout@master
        name: Checkout

      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: "https://registry.npmjs.org"

      - name: Variables
        run: |
          echo VERSION=$(npm run version --silent) >> $GITHUB_ENV
        shell: bash

      - name: Package Name
        run: |
          echo RELEASE_NAME_BLOCKCORE=${{ env.BLOCKCORE }}-${{ env.VERSION }}.zip >> $GITHUB_ENV
          echo RELEASE_NAME_COINVAULT=${{ env.COINVAULT }}-${{ env.VERSION }}.zip >> $GITHUB_ENV
          echo RELEASE_NAME_SMARTCITYPLATFORM=${{ env.SMARTCITYPLATFORM }}-${{ env.VERSION }}.zip >> $GITHUB_ENV
        shell: bash

      - name: Create/Update Draft Release
        uses: sondreb/action-release@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: "${{env.RELEASE_NAME_BLOCKCORE}};${{env.RELEASE_NAME_COINVAULT}};${{env.RELEASE_NAME_SMARTCITYPLATFORM}}"
          draft: true
          prerelease: false
          name: "Blockcore Extension (Release ${{env.VERSION}})"
          tag: ${{env.VERSION}}
